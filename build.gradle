plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'idea'

}

def install_dir = "c:/data/software"

group 'ch.veilluka'
version '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'ch.veilluka'
            artifactId 'secured-properties'
            version '1.0'
            from components.java
        }
    }
}


mainClassName = 'ch.cnc.Console'


jar{
    manifest{
        attributes 'Main-Class': 'ch.cnc.Console'
    }
    archiveBaseName = 'secured-properties'
}

test {
    useJUnitPlatform()
}

jar {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    manifest {
        attributes 'Implementation-Title': getProject().group
        attributes 'Implementation-Vendor': 'Bauer Vedran'
        attributes 'Implementation-Version': version
        attributes 'JAVA-Version': JavaVersion.current()
        attributes 'targetCompability': targetCompatibility
        attributes 'Main-Class': 'ch.cnc.Console'
    }
    from sourceSets.main.allSource
}

task copyLocal (type: Copy){
    from "build/install"
    into install_dir
}

task createVersion{
    doLast{
        File f = new File("src/main/java/ch/cnc/Version.java")
        f.write("package ch.cnc; \n public class Version{ ");
        f.append("public static String VERSION=\"");
        f.append(version+".");
        Calendar c = Calendar.getInstance();
        f.append(c.get(Calendar.YEAR));
        f.append(c.get(Calendar.MONTH));
        f.append(c.get(Calendar.DATE));
        f.append("\";");
        f.append("}");
    }
}


task installLocal {
    dependsOn createVersion
    dependsOn jar
    dependsOn installDist
    dependsOn copyLocal
    tasks.findByName('jar').mustRunAfter 'createVersion'
    tasks.findByName('installDist').mustRunAfter 'jar'
    tasks.findByName('copyLocal').mustRunAfter 'installDist'
}

dependencies {
    compile group: 'com.github.peter-gergely-horvath', name: 'windpapi4j', version: '1.0'
    compile group: 'com.google.guava', name: 'guava', version: '28.1-jre'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'net.java.dev.jna', name: 'jna', version: '5.4.0'
    compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.0'
    testCompile group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.2.0'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.45'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.15'
    // ---------------------- JAVA FX-............................
    compile group: 'org.openjfx', name: 'javafx', version: '13', ext: 'pom'
    compile group: 'org.openjfx', name: 'javafx-base', version: '13'
    compile group: 'org.openjfx', name: 'javafx-controls', version: '13'
    compile group: 'org.openjfx', name: 'javafx-graphics', version: '13'
    compile group: 'org.openjfx', name: 'javafx-media', version: '13'
    compile group: 'org.openjfx', name: 'javafx-swing', version: '13'
    compile group: 'org.openjfx', name: 'javafx-web', version: '13'
   

}
